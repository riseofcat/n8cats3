//TODO DON'T USE TABS IN GRADLE FOR HEROKUAPP.COM !!!
buildscript {
  repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    mavenLocal()
  }
}
buildscript {//kotlin
  ext.kotlin_version = '1.1.1'
  ext.ktor_version = '0.3.1'
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}
buildscript {//libgdx
  dependencies {
    classpath "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
    classpath "com.android.tools.build:gradle:$androidPluginVersion"
    classpath "de.richsource.gradle.plugins:gwt-gradle-plugin:$gwtPluginVersion"
  }
}
def applyJava8 = {
  apply plugin: 'java'
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8
}
def applyJava7 = {
  apply plugin: 'java'
  sourceCompatibility = JavaVersion.VERSION_1_7
  targetCompatibility = JavaVersion.VERSION_1_7
}
allprojects {
  repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    mavenLocal()
  }
}
if(true) /*java server*/ {
  configure(project(':server'), applyJava8)//old style: applyJava()
  configure(project(':server')) {
    sourceSets {
      main.java.srcDirs += 'src/main/java'
    }
    dependencies {
      compile 'com.sparkjava:spark-core:2.6.0' /*websocket*///compile 'com.sparkjava:spark-core:+'
      compile 'org.slf4j:slf4j-simple:1.8.0-alpha2' /*logs*///compile 'org.slf4j:slf4j-simple:+'
      //runtime "org.slf4j:slf4j-simple:1.7.12"
    }
  }
}
configure(project(':server')) {
  dependencies {
    compile "com.badlogicgames.gdx:gdx:$gdxVersion"//json in server
    compile project(':share')//compile project(":mass_libgdx:share")//share
    //  compile project(":lib")
  }
}
def java7projects = /*allprojects*/ subprojects - project(':server')
if(file("local.properties").exists()) {
  java7projects -= project(':android')
}
if (true) /*libgdx*//*share*/ {
  configure(java7projects, applyJava7)
  subprojects {
    ext.appName = 'mass-power.io'//power-mass.io,react-mass.io
  }
}
if (true)/*heroku*/ {
  task copyToLib(type: Copy) {
    into "$buildDir/libs"
    from(project(':server').configurations.compile)
  }
//  task stage(dependsOn: ['clean', 'build', 'copyToLib'])
  task stage {
    dependsOn project(':server').clean, project(':server').build, copyToLib
  }
  project(':server').build.mustRunAfter project(':server').clean
}
if (false)/*kotlin server*/ {//kotlin eats + 5 MB RAM//todo configure(project(':server')) {...}
  apply plugin: 'kotlin'
  if (true) {//may be false and compiles success
    compileKotlin {
      kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.1"
        languageVersion = "1.1"
      }
    }
  }
  sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
  }
  repositories {
    maven { url 'http://dl.bintray.com/kotlin/kotlinx.support' }
    maven { url 'http://dl.bintray.com/kotlin/ktor' }
  }
  dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    compile "org.jetbrains.ktor:ktor-websockets:$ktor_version"
    compile "org.jetbrains.ktor:ktor-netty:$ktor_version"
    compile "org.jetbrains.ktor:ktor-jetty:$ktor_version"
    compile "org.jetbrains.ktor:ktor-freemarker:$ktor_version"
    compile "org.jetbrains.kotlinx:kotlinx-html-jvm:0.6.3"
  }
}
if (false)/*old*/ {
  version '1.0'
  plugins {
    id "io.ratpack.ratpack-groovy" version "1.4.5"
    id "org.jetbrains.kotlin.jvm" version "1.1.1"
  }
  subprojects {
    version = '0.0.1-SNAPSHOT'
    ext.appName = 'libgdxwebsocket'
  }
}
